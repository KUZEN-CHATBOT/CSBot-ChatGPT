version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.0.0
  aws-cli: circleci/aws-cli@3.0.0
  slack: circleci/slack@4.12.1

executors:
  rancon-executor:
    docker:
      - image: cimg/python:3.11.2
    working_directory: ~/app

commands:
  pre-env:
    description: "Prepare the environments"
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: verify
          command: |
            echo "AWS_ACCOUNT_URL = ${AWS_ACCOUNT_URL}"
            echo "AWS_REGION = ${AWS_REGION}"
            echo "SHARED_AWS_ECR_REGISTRY_ID = ${SHARED_AWS_ECR_REGISTRY_ID}"
            aws sts get-caller-identity
            echo "========"
      - aws-ecr/ecr-login:
          registry-id: SHARED_AWS_ECR_REGISTRY_ID
          region: ${AWS_REGION}

  build-and-deploy:
    description: "Build and deploy to ECS"
    parameters:
      image_name:
        type: string
        default: ""

      cluster_name:
        type: string
        default: ""

      service_name:
        type: string
        default: ""

    steps:
      - run:
          name: Install ecs-deploy
          command: |
            curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee -a /usr/bin/ecs-deploy
            sudo chmod +x /usr/bin/ecs-deploy
      - run:
          name: Install jq
          command: sudo apt-get install -y jq

      - run:
          name: "Build & Push Docker Image"
          command: |
            docker build -t ${AWS_ACCOUNT_URL}/<<parameters.image_name>>:latest -t ${AWS_ACCOUNT_URL}/<<parameters.image_name>>:$CIRCLE_SHA1 -f ./Dockerfile .
            docker push ${AWS_ACCOUNT_URL}/<<parameters.image_name>>:$CIRCLE_SHA1
            docker push ${AWS_ACCOUNT_URL}/<<parameters.image_name>>:latest
      - run:
          name: "Sevice deploy"
          command: |
            ecs-deploy --use-latest-task-def --skip-deployments-check -c <<parameters.cluster_name>> -n <<parameters.service_name>> \
              -r ${AWS_REGION} -t 400 \
              -i ${AWS_ACCOUNT_URL}/<<parameters.image_name>>:$CIRCLE_SHA1
jobs:

  secret-detect:
    working_directory: ~/app
    docker:
      - image: zricethezav/gitleaks:v7.6.1
        user: root
    steps:
      - checkout
      - run:
          name: "Install curl and jq"
          command: apk update && apk add curl jq
      - run:
          name: "Secret scanning"
          command: |
            gitleaks --path .  -v --no-git
      - slack/notify:
          event: fail
          channel: log_alert_stg
          template: basic_fail_1
          mentions: <@U0B428C8G>,<@U01STQJ5NTY>
      - slack/notify:
          event: pass
          channel: log_alert_stg
          template: basic_success_1

  deploy-stgv6:
    executor: rancon-executor
    steps:
      - run:
          name: Set env
          command: |
            echo "export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_STGV6}" >> $BASH_ENV
            echo "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_STGV6}" >> $BASH_ENV
            echo "export AWS_REGION=${AWS_REGION}" >> $BASH_ENV
            echo "export AWS_DEFAULT_REGION=${AWS_REGION}" >> $BASH_ENV
            echo "export AWS_ACCOUNT_URL=${AWS_ACCOUNT_URL_STGV6}" >> $BASH_ENV
      - pre-env
      - build-and-deploy:
          image_name: "ai-bot-py-stgv6"
          cluster_name: "kuzen-stgv6"
          service_name: "ai-bot-stgv6"
      - slack/notify:
          event: fail
          channel: log_alert_stg
          template: basic_fail_1
          mentions: <@U0B428C8G>,<@U01STQJ5NTY>,<@UJ7BT0D16>
      - slack/notify:
          event: pass
          channel: log_alert_stg
          template: success_tagged_deploy_1

workflows:
  build_and_test:
    jobs:
      - secret-detect:
          context:
            - slack-secrets

      - deploy-stgv6:
          context:
            - slack-secrets
            - aws-env-secrets
          filters:
            branches:
              only: 
                - staging
                - infra/dungnm/#184624112-config-ci